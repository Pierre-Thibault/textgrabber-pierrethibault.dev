#!/usr/bin/env bash

# Define paths
SOURCE_DIR="result/textgrabber@pierrethibault.dev"
ARCHIVE_DIR="./archive"
ARCHIVE_NAME="textgrabber@pierrethibault.dev.zip"
TEMP_DIR="/tmp/textgrabber_temp"

# Convert ARCHIVE_DIR to an absolute path
ARCHIVE_DIR=$(realpath "$ARCHIVE_DIR")

# Check if the source directory exists
if [ ! -d "$SOURCE_DIR" ]; then
  echo "Error: The directory $SOURCE_DIR does not exist."
  exit 1
fi

# Create the archive directory if it doesn't exist
mkdir -p "$ARCHIVE_DIR"

# Create a unique temporary directory using mktemp
if ! TEMP_DIR=$(mktemp -d); then
  echo "Error: Failed to create a temporary directory"
  exit 1
fi

# Copy the source directory content to the temporary directory
# Use rsync to preserve structure but ignore owner, group, and permissions
rsync -a --no-o --no-g --no-perms "$SOURCE_DIR" "$TEMP_DIR"

# Change the owner and group of the copied content
chown -R pierre:users "$TEMP_DIR/textgrabber@pierrethibault.dev"

# Add write permissions for the owner on the content
chmod -R u+w "$TEMP_DIR/textgrabber@pierrethibault.dev"

# Create or replace the zip archive with textgrabber@pierrethibault.dev at the root level
cd "$TEMP_DIR" || exit 1


# Check if the archive creation was successful
if zip -r "$ARCHIVE_DIR/$ARCHIVE_NAME" "textgrabber@pierrethibault.dev"; then
  echo "Archive $ARCHIVE_NAME successfully created in $ARCHIVE_DIR"
else
  echo "Error: Failed to create the archive"
  cd - >/dev/null || exit 1
  rm -rf "$TEMP_DIR"
  exit 1
fi

# Change the owner and group of the archive itself
chown pierre:users "$ARCHIVE_DIR/$ARCHIVE_NAME"

# Add write permissions for the owner of the archive
chmod u+w "$ARCHIVE_DIR/$ARCHIVE_NAME"

# Clean up the temporary directory
rm -rf "$TEMP_DIR"

# Check if the cleanup was successful
if rm -rf "$TEMP_DIR"; then
  echo "Temporary directory successfully cleaned up."
else
  echo "Error: Unable to clean up the temporary directory $TEMP_DIR"
  cd - >/dev/null || exit 1
  exit 1
fi

# Return to the initial directory
cd - >/dev/null || exit 1

